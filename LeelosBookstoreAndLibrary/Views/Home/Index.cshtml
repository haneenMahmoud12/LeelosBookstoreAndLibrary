@model LeelosBookstoreAndLibrary.Models.BooksViewModel

@{
    ViewBag.Title = "Books Index";
}

<h2>Books</h2>

@if (TempData["Message"] != null)
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script>
        $(document).ready(function () {
            toastr.success('@TempData["Message"]', 'Success', { timeOut: 5000 });
        });
    </script>
}

@if (TempData["ErrorMessage"] != null)
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script>
        $(document).ready(function () {
            toastr.error('@TempData["ErrorMessage"]', 'Error', { timeOut: 5000 });
        });
    </script>
}


@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}

@*<p>
        @Html.ActionLink("Go to Toastr Test", "TestToastr", "Home", null, new { @class = "btn btn-primary" })
    </p>*@

<!-- Search form -->
<form method="get" action="@Url.Action("Index")">
    <input type="text" name="searchQuery" placeholder="Search by title, author, or genre..." value="@Model.SearchQuery" />
    <input type="submit" value="Search" />
</form>

<!-- Create book link for admin -->
@if (!string.IsNullOrEmpty(Session["UserId"]?.ToString()) && (int)Session["UserRole"] == 2)
{
    <p>
        @Html.ActionLink("Create New", "AddBook")
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Books.First().Title)</th>
            <th>Author</th>
            <th>@Html.DisplayNameFor(model => model.Books.First().Genre)</th>
            <th>@Html.DisplayNameFor(model => model.Books.First().Price)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in Model.Books)
        {
            <tr>
                <td>@book.Title</td>
                <td>@book.Author.FirstName @book.Author.LastName</td>
                <td>@book.Genre</td>
                <td>@book.Price.ToString("F2")</td>
                <td>
                    @Html.ActionLink("Details", "BookDetails", new { id = book.Id })

                    @*Admin Actions*@

                    @if (!string.IsNullOrEmpty(Session["UserId"]?.ToString()) && (int)Session["UserRole"] == 2)
                    {
                        <br />
                        @Html.ActionLink("Edit", "EditBook", new { id = book.Id })
                        <br />
                        <a href="#" onclick="confirmDelete(@book.Id); return false;">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Sorting Dropdown -->
<form method="get" action="@Url.Action("Index")" class="form-inline">
    <label for="sortOrder">Sort by:</label>
    <select id="sortOrder" name="sortOrder" onchange="this.form.submit()">
        <option value="" @(string.IsNullOrEmpty(Model.SortOrder) ? "selected" : "")>Default (Title)</option>
        <option value="price" @(Model.SortOrder == "price" ? "selected" : "")>Price</option>
        <option value="author" @(Model.SortOrder == "author" ? "selected" : "")>Author</option>
        <option value="genre" @(Model.SortOrder == "genre" ? "selected" : "")>Genre</option>
    </select>
</form>

<!-- Confirm Delete -->
<script type="text/javascript">
    function confirmDelete(bookId) {
        if (confirm("Are you sure you want to delete this book?")) {
            const form = document.createElement("form");
            form.method = "post";
            form.action = '@Url.Action("DeleteBook")';
            @*@Html.AntiForgeryToken();*@

            const hiddenField = document.createElement("input");
            hiddenField.type = "hidden";
            hiddenField.name = "id";
            hiddenField.value = bookId;

            form.appendChild(hiddenField);
            document.body.appendChild(form);
            form.submit();
        }
    }
</script>

<!-- Pagination -->
@if (Model.TotalBooksCount > Model.PageSize)
{
    <ul class="pagination">
        @for (int i = 1; i <= Math.Ceiling((double)Model.TotalBooksCount / Model.PageSize); i++)
        {
            <li class="@(i == Model.CurrentPage ? "active" : "")">
                <a href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize, searchQuery = Model.SearchQuery })">@i</a>
            </li>
        }
    </ul>
}


<!-- Page Size Dropdown -->
<form method="get" action="@Url.Action("Index")" class="form-inline">
    <label for="pageSize">Items per page:</label>
    <select id="pageSize" name="pageSize" onchange="this.form.submit()">
        <option value="4" @(Model.PageSize == 4 ? "selected" : "")>4</option>
        <option value="10" @(Model.PageSize == 10 ? "selected" : "")>10</option>
        <option value="20" @(Model.PageSize == 20 ? "selected" : "")>20</option>
        <option value="100" @(Model.PageSize == 100 ? "selected" : "")>100</option>
    </select>
</form>
