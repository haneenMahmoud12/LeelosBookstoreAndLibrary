@model LeelosBookstoreAndLibrary.Models.UserViewModel

@{
    ViewBag.Title = "Edit Account";
}

@if (TempData["Message"] != null)
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />

    <style>
        /* Custom style to make toastr success green */
        .toast-success {
            background-color: #28a745 !important; /* Bootstrap green */
        }
    </style>

    <script>
        $(document).ready(function () {
            toastr.success('@TempData["Message"]', 'Success', { timeOut: 5000 });
        });
    </script>
}

@if (TempData["ErrorMessage"] != null)
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />

    <script>
        $(document).ready(function () {
            toastr.error('@TempData["ErrorMessage"]', 'Error', { timeOut: 5000 });
        });
    </script>
}


@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}


<h2>Edit Your Account Information</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        @if ((int)Session["UserId"] == 1)
        {

            <label>Address:</label>
            <div class="form-group">
                @Html.LabelFor(model => model.Address.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address.Governorate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.Governorate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address.Governorate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.Country, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address.Country, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address.ZipCode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

        }

        <!--<div class="form-group">
            @Html.Label("Old Date of Birth", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p class="form-control-static">@Model.DateOfBirth</p>-->
        <!-- Display old DOB -->
        <!--@Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>-->
        @*<div class="form-group">
                @Html.Label("Current Password", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="password" name="currentPassword" class="form-control" />
                    @Html.ValidationMessage("currentPassword", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("New Password (Optional)", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="password" name="newPassword" class="form-control" />
                    @Html.ValidationMessage("newPassword", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Confirm New Password", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="password" name="confirmNewPassword" class="form-control" />
                    @Html.ValidationMessage("confirmNewPassword", "", new { @class = "text-danger" })
                </div>
            </div>*@

        @Html.ActionLink("Change Password", "ChangePassword", "Account")


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Cancel", "ViewAccount", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}
